<form action="/admin/upload/image" method="post" id="frmUpload" enctype='multipart/form-data'>
    <div class="has-text-centered">
        <div class="column is-10 is-inline-block box my-5">


            <div
                    class="card-header-title is-inline-block is-size-4-tablet is-size-4-mobile">ĐĂNG TẢI HÌNH ẢNH
            </div>


            <p class="has-text-primary has-text-weight-bold is-size-4"> You must upload only 1 images</p>

             <form id="formUploadProduct" method="post" name="formUploadProduct" enctype="multipart/form-data">
                   {{#if congratulations}}
                        <p class="has-text-info has-text-weight-bold text-center mb-2">Thêm mới sản phẩm thành công! </p>
                    {{/if}}
                  {{#if errorImages}}
                        <p class="text-red-500 text-center mb-4 "><strong>2. You just have uploaded only 1 images. Please read our rules carefully then submit again, Thank you! </strong></p>
                    {{/if}}
                  <div class="mb-2">

                      <article aria-label="File Upload Modal" class="relative h-full flex flex-col "
                            ondrop="dropHandler(event);" ondragover="dragOverHandler(event);"
                            ondragleave="dragLeaveHandler(event);" ondragenter="dragEnterHandler(event);">

                            <!-- scroll area -->
                            <section>
                               <header>
                                <div class="tile is-parent h-">
                                    <article class="tile is-child notification is-info">
                                     <p class="title">Drag and drop your files here or</p>
                                     <input id="hidden-input" name="img" type="file" class="is-hidden" multiple/>
                                       <span id="button"  class="mt-2 file-cta">
                                          <span class="file-icon">
                                             <i class="fas fa-upload"></i>
                                          </span>
                                           <span class="file-label">
                                             Choose a file…
                                          </span> 
                                     </span>
                                    </article>
                                </div>
                               </header>
                              <h1 class="has-text-grey has-text-weight-bold is-size-5">
                                    To Upload
                                </h1>
                              <ul id="gallery" class="flex flex-1 flex-wrap -m-1">
                                    <li id="empty"
                                        >
                                        <img class="mx-auto w-32"
                                            src="https://user-images.githubusercontent.com/507615/54591670-ac0a0180-4a65-11e9-846c-e55ffce0fe7b.png"
                                            alt="no data" />
                                        <div class="text-small text-gray-500">No files selected</div>
                                    </li>
                                </ul>
                            </section>
                            </article>
                    <template id="image-template">
                            <li class="block p-1 w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 xl:w-1/8 h-24 mt-2">
                                <article tabindex="0"
                                    class="group hasImage w-full h-full rounded-md focus:outline-none focus:shadow-outline bg-gray-100 cursor-pointer relative text-transparent hover:text-white shadow-sm">
                                    <img alt="upload preview"
                                        class="image is-128x128" />

                                    <section
                                        class="flex flex-col rounded-md text-xs break-words w-full h-full z-20 absolute top-0 py-2 px-3">
                                        <h1 class="flex-1"></h1>
                                        <div class="flex">
                                            <span class="p-1">
                                                <i>
                                                    <svg class="fill-current w-4 h-4 ml-auto pt-"
                                                        xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                        viewBox="0 0 24 24">
                                                        <path
                                                            d="M5 8.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5zm9 .5l-2.519 4-2.481-1.96-4 5.96h14l-5-8zm8-4v14h-20v-14h20zm2-2h-24v18h24v-18z" />
                                                    </svg>
                                                </i>
                                            </span>

                                            <p class="p-1 size text-xs"></p>
                                            <button
                                                class="delete ml-auto focus:outline-none hover:bg-gray-300 p-1 rounded-md">
                                                <svg class="pointer-events-none fill-current w-4 h-4 ml-auto"
                                                    xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                    viewBox="0 0 24 24">
                                                    <path class="pointer-events-none"
                                                        d="M3 6l3 18h12l3-18h-18zm19-4v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.316c0 .901.73 2 1.631 2h5.711z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </section>
                                </article>
                            </li>
                        </template>

                    </div>

                   
                    <div class="flex justify-center">
                        <button
                                class="button is-primary" id="submit">Đăng tải hình ảnh</button>
                    </div>


                  </div>
             </form>
            </div>
        </div>
    </div>

   

    </div>

</form>


{{#section 'js_seller'}}
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    const fileTempl = document.getElementById("file-template"),
        imageTempl = document.getElementById("image-template"),
        empty = document.getElementById("empty");
    // use to store pre selected files
    let FILES = {};
    // check if file is of type image and prepend the initialied
    // template to the target element
    function addFile(target, file) {
        const isImage = file.type.match("image.*"),
            objectURL = URL.createObjectURL(file);
        const clone = isImage
            ? imageTempl.content.cloneNode(true)
            : fileTempl.content.cloneNode(true);
        clone.querySelector("h1").textContent = file.name;
        clone.querySelector("li").id = objectURL;
        clone.querySelector(".delete").dataset.target = objectURL;
        clone.querySelector(".size").textContent =
            file.size > 1024
                ? file.size > 1048576
                    ? Math.round(file.size / 1048576) + "mb"
                    : Math.round(file.size / 1024) + "kb"
                : file.size + "b";
        isImage &&
            Object.assign(clone.querySelector("img"), {
                src: objectURL,
                alt: file.name
            });
        empty.classList.add("hidden");
        target.prepend(clone);
        FILES[objectURL] = file;
    }
    const gallery = document.getElementById("gallery"),
        overlay = document.getElementById("overlay");
    // click the hidden input of type file if the visible button is clicked
    // and capture the selected files
    const hidden = document.getElementById("hidden-input");
    document.getElementById("button").onclick = () => hidden.click();
    hidden.onchange = (e) => {
        if (gallery.children.length > 1) {
            swal({
                title: "Your select file is more than 1",
                icon: "warning",
                button: true,
                dangerMode: true,
            })
        }
        else {
            for (const file of e.target.files) {
                if (gallery.children.length > 1) {
                    break;
                }
                addFile(gallery, file);
            }
        }
    };
    // use to check if a file is being dragged
    const hasFiles = ({ dataTransfer: { types = [] } }) =>
        types.indexOf("Files") > -1;
    // use to drag dragenter and dragleave events.
    // this is to know if the outermost parent is dragged over
    // without issues due to drag events on its children
    let counter = 0;
    // reset counter and append file to gallery when file is dropped
    function dropHandler(ev) {
        ev.preventDefault();
        for (const file of ev.dataTransfer.files) {
            addFile(gallery, file);
            overlay.classList.remove("draggedover");
            counter = 0;
        }
    }
    // only react to actual files being dragged
    function dragEnterHandler(e) {
        e.preventDefault();
        if (!hasFiles(e)) {
            return;
        }
        ++counter && overlay.classList.add("draggedover");
    }
    function dragLeaveHandler(e) {
        1 > --counter && overlay.classList.remove("draggedover");
    }
    function dragOverHandler(e) {
        if (hasFiles(e)) {
            e.preventDefault();
        }
    }
    // event delegation to caputre delete events
    // fron the waste buckets in the file preview cards
    gallery.onclick = ({ target }) => {
        if (target.classList.contains("delete")) {
            const ou = target.dataset.target;
            document.getElementById(ou).remove(ou);
            gallery.children.length === 1 && empty.classList.remove("hidden");
            delete FILES[ou];
        }
    };
    // Submit
    if (gallery.children.length === 1) {
        document.getElementById("submit").onclick = () => {
            swal({
                title: "Congrats!",
                text: "Your product has been uploaded",
                icon: "success",
                button: "OK",
            });
        };
    }
    //clear entire selection
    // document.getElementById("cancel").onclick = () => {
    //     while (gallery.children.length > 0) {
    //         gallery.lastChild.remove();
    //     }
    //     FILES = {};
    //     empty.classList.remove("hidden");
    //     gallery.append(empty);
    // };
</script>

{{/section}}